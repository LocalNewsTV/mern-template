version: '3.7'
services:

  #############################################################################################
  ###                                       Mongo                                           ###
  #############################################################################################
  mongo:
    image: mongo:3.6
    container_name: mongodb
    tty: true
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME:-app-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-app-admin}
      - MONGO_DATABASE_NAME=${MONGO_DATABASE:-app}
    volumes:
      - ./mongoSeed/init:/docker-entrypoint-initdb.d
    ports:
      - ${MONGO_PORT:-27017}:${MONGO_PORT:-27017}
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u ${MONGO_USERNAME} -p ${MONGO_PASSWORD} --quiet | grep 1
      interval: 20s
      timeout: 30s
      retries: 5
      start_period: 120s

  #############################################################################################
  ###                                       Frontend                                        ###
  #############################################################################################
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - app-network
    ports: 
      - "8080:8080"
    healthcheck:
      test: curl --fail http://localhost:8080 || exit 1
      interval: 20s
      timeout: 30s
      retries: 5
      start_period: 20s

  #############################################################################################
  ###                                         API                                           ###
  #############################################################################################
  express-api:
    container_name: express-api
    build:
      context: ./backend
      dockerfile: Dockerfile
    networks:
      - app-network
    ports: 
      - 3000:3000
    environment:
      - API_PORT=${API_PORT:-3000}
      - API_HOSTNAME=${API_HOSTNAME:-localhost}
      - MONGO_USERNAME=${MONGO_USERNAME:-app-admin}
      - MONGO_PASSWORD=${MONGO_PASSWORD:-app-admin}
      - MONGO_PORT=${MONGO_PORT:-27017}
      - MONGO_DATABASE=${MONGO_DATABASE:-app}
      - MONGO_SERVICE=${MONGO_SERVICE:-mongodb}
      - CONTAINERIZED=true
    healthcheck:
      test: curl localhost:${PORT:-3000}/api/health | grep 'API is healthy and ready'
      interval: 20s
      timeout: 30s
      retries: 5
      start_period: 20s
    depends_on:
      mongo:
        condition: service_healthy

#############################################################################################
###                                       Network                                         ###
#############################################################################################

networks:
  app-network:
    driver: "bridge"
